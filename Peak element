An element is called a peak element if its value is not smaller than the value of its adjacent elements(if they exists). Given an array arr[] of size N, Return the index of any one of its peak elements. 
Note: The generated output will always be 1 if the index that you return is correct. Otherwise output will be 0. Also, arr[] will be in ascending order before the peak element, and in descending order after that.
Example 1:

Input: 
N = 3
arr[] = {1,2,3}
Possible Answer: 2
Generated Output: 1
Explanation: index 2 is 3.
It is the peak element as it is 
greater than its neighbour 2.

SOLUTION:-
class Solution
{
    public:
    int peakElement(int arr[], int n)
    {
       // Your code here
        if(n==1 or arr[0]>=arr[1]) {
         return 0;
            
        }
        if(arr[n-1]>=arr[n-2]) {
            return n-1;
            }
       for(int i=1;i<n-1;i++){
               if(arr[i]>arr[i+1] 
               && arr[i]>arr[i-1]){

                   return i;
               }
               else if(arr[i]>arr[i+1]){
                   return i;
               }
           
           
       }
       return 0;
    }
};
