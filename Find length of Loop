Given a linked list of size N. The task is to complete the function countNodesinLoop() that checks whether a given Linked List contains a loop or not and if the loop is present then return the count of nodes in a loop or else return 0. C is the position of the node to which the last node is connected. If it is 0 then no loop.
Example 1:

Input:
N = 10
value[]={25,14,19,33,10,21,39,90,58,45}
C = 4
Output: 7

SOLUTION:-
/*

struct Node {
    int data;
    struct Node *next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};

*/

//Function to find the length of a loop in the linked list.
int findLength(struct Node *h1,struct Node *h2){
    int cnt=1;
    h2=h2->next;
    while(h1!=h2){
        cnt++;
        h2=h2->next;
    }
    return cnt;
}

int countNodesinLoop(struct Node *head)
{
    // Code here
    if(head==NULL || head->next==NULL){
        return NULL;
    }
    Node* fast=head;
    Node* slow=head;
    while(fast!=NULL && fast->next!=NULL){
        slow=slow->next;
        fast=fast->next->next;
        if(slow==fast){
            return findLength(slow,fast);
        }
    }
    
    return 0;
    
}
