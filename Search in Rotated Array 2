Given a sorted and rotated array A of N elements which is rotated at some point, and may contain duplicates and given an element key. Check whether the key exist in the array A or not.

Example 1:

Input:
N = 7
A[] = {2,5,6,0,0,1,2}
key = 0
Output:
1
Explanation:
0 is found at index 3.

SOLUTION:-
class Solution {
  public:
    bool Search(int N, vector<int>& A, int Key) {
        // Code here
    int l=0;
    int h=N-1;
    while(l<=h){
        int mid=(l+h)/2;
        if(A[mid]==Key){
            return true;
        }
        if(A[l]==A[mid] && A[mid]==A[h]){
            l=l+1;
            h=h-1;
            continue;
        }
        if(A[l]<=A[mid]){
            if(A[l]<=Key && Key<=A[mid]){
                h=mid-1;
            }
            else{
                l=mid+1;
            }

        }
        else{
            if(A[mid]<=Key && A[h]>=Key){
                l=mid+1;
            }
            else{
                h=mid-1;
            }
        }
    }
    return false;

    }
};
