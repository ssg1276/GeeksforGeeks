A number N is represented in Linked List such that each digit corresponds to a node in linked list. You need to add 1 to it.

Example 1:
Input:
LinkedList: 4->5->6
Output: 457

SOLUTION:-

/* 

struct Node
{
    int data;
    struct Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
};

*/

class Solution
{
    public:
    
    Node* reverse(Node* head){
        Node* prevEl=NULL;
        Node* temp=head;
        while(temp!=NULL){
            Node* frontEl=temp->next;
            temp->next=prevEl;
            prevEl=temp;
            temp=frontEl;
            
        }
        return prevEl;
        
    }
    
    
    
    Node* addOne(Node *head) 
    {
        // Your Code here
        // return head of list after adding one
        head=reverse(head);
        Node* temp=head;
        int carry=1;
        while(temp!=NULL){
            temp->data=temp->data+carry;
            if(temp->data<10){
                carry=0;
                break;
                
            }
            else{
                carry=1;
                temp->data=0;
            }
            temp=temp->next;
        }
        
        if(carry){
            Node* newHead=new Node(1);
            head=reverse(head);
            newHead->next=head;
            return newHead;
        }
        head=reverse(head);
        return head;
    }
};
