GIven two different arrays A and B of size N and M, the task is to merge the two arrays which are unsorted into another array which is sorted.

Example 1:

Input: N = 3, M = 3
A[] = {10, 5, 15}
B[] = {20, 3, 2}
Output: 2 3 5 10 15 20
Explanation: After merging both the 
array's and sorting it with get the 
desired output.  

SOLUTION:-
//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// Your code goes hereclass Solution{
	
class Solution{
	public:
	void sortedMerge(int a[], int b[], int res[],int n, int m)
	{
	   // Your code goes here
	   int left=0;
	   int right=0;
	   int index=0;
	   while(left<n && right<m){
	       if(a[left]<=a[right]){
	           res[index++]=a[left++];
	       }
	       else{
	           res[index++]=b[right++];
	       }
	   }
	   
	   while(left<n){
	       res[index++]=a[left++];
	   }
	   while(right<m){
	       res[index++]=b[right++];
	   }
	   
	 sort(res,res+n+m);
	}
};
	  


//{ Driver Code Starts.

int main() 
{
   	
   	int t;
    cin >> t;
    while (t--)
    {
    	int n, m;
	    cin >> n >> m;
	    int a[n], b[m];
	    for(int i = 0;i<n;i++){
	        cin >> a[i];
	    }

	    for(int i = 0;i<m;i++){
	        cin >> b[i];
	    }
	    
	    int res[n+m];

      
        Solution ob;
        ob.sortedMerge(a,b,res,n,m);

        for(int i = 0;i<n+m;i++){
	        cout << res[i] << " ";
	    }
	   
        
	    cout << "\n";
	     
    }
    return 0;
}

// } Driver Code Ends
