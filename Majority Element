Given an array A of N elements. Find the majority element in the array. A majority element in an array A of size N is an element that appears strictly more than N/2 times in the array.
 

Example 1:

Input:
N = 3 
A[] = {1,2,3} 
Output:
-1
Explanation:
Since, each element in 
{1,2,3} appears only once so there 
is no majority element.
Example 2:

Input:
N = 5 
A[] = {3,1,3,3,2} 
Output:
3
Explanation:
Since, 3 is present more
than N/2 times, so it is 
the majority element.

Your Task:
The task is to complete the function majorityElement() which returns the majority element in the array. If no majority exists, return -1.

SOLUTION:-
//User function template for C++

class Solution{
  public:
     // Function to find majority element in the array
    // a: input array
    // size: size of input array
    int majorityElement(int a[], int size)
    {
        
        int c1=0;
        int el;
        for(int i=0;i<size;i++){
            if(c1==0){
                c1=1;
                el=a[i];
            }
            else if(a[i]==el){
                c1++;
            }
            else{
                c1--;
            }
        }
        int c2=0;
        for(int i=0;i<size;i++){
            if(a[i]==el){
                c2++;
            }
        }
        if(c2>(size)/2){
            return el;
        }
        else{
            return -1;
        }
        
    }
};
